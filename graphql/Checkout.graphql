fragment AddressFragment on Address {
  firstName
  lastName
  streetAddress1
  streetAddress2
  phone
  country {
    code
    country
  }
  city
  postalCode
}

fragment CheckoutFragment on Checkout {
  id
  voucherCode
  isShippingRequired
  discount {
    currency
    amount
  }
  email
  shippingPrice {
    gross {
      currency
      amount
    }
  }
  deliveryMethod {
    __typename
  }
  shippingMethods {
    id
    name
    description
    message
    price {
      currency
      amount
    }
    active
  }
  totalPrice {
    tax {
      currency
      amount
    }
    net {
      currency
      amount
    }
    gross {
      currency
      amount
    }
  }
  subtotalPrice {
    tax {
      currency
      amount
    }
    net {
      currency
      amount
    }
    gross {
      currency
      amount
    }
  }

  billingAddress {
    ...AddressFragment
  }
  shippingAddress {
    ...AddressFragment
  }
  lines {
    id
    quantity
    requiresShipping
    metadata {
      key
      value
    }
    undiscountedUnitPrice {
      amount
      currency
    }
    undiscountedTotalPrice {
      amount
      currency
    }
    totalPrice {
      currency
      net {
        currency
        amount
      }
      gross {
        currency
        amount
      }
      tax {
        currency
        amount
      }
    }

    variant {
      id
      product {
        id
        name
        attributes {
          values {
            name
            slug
            value
            boolean
            reference
            plainText
          }
          attribute {
            slug
          }
        }
        media {
          url
        }
      }
      attributes {
        values {
          name
          slug
          value
          boolean
          reference
          plainText
        }
        attribute {
          slug
        }
      }
      sku
      name
      media {
        url
      }
    }
  }
}

mutation createCheckout($channel: String!, $lines: [CheckoutLineInput!]!) {
  checkoutCreate(input: { channel: $channel, lines: $lines }) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
      message
    }
  }
}

query getCheckoutById($id: ID!) {
  checkout(id: $id) {
    ...CheckoutFragment
  }
}

mutation checkoutCreate($channel: String!, $lines: [CheckoutLineInput!]!) {
  checkoutCreate(input: { channel: $channel, lines: $lines }) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
      message
    }
  }
}

mutation checkoutLinesUpdate($id: ID!, $lines: [CheckoutLineUpdateInput!]!) {
  checkoutLinesUpdate(id: $id, lines: $lines) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
      message
    }
  }
}

mutation CheckoutLinesAdd($id: ID!, $lines: [CheckoutLineInput!]!) {
  checkoutLinesAdd(id: $id, lines: $lines) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
      message
    }
  }
}

mutation checkoutAddPromoCode($id: ID!, $promoCode: String!) {
  checkoutAddPromoCode(checkoutId: $id, promoCode: $promoCode) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
      message
    }
  }
}

mutation checkoutBillingAddressUpdate(
  $id: ID!
  $billingAddress: AddressInput!
) {
  checkoutBillingAddressUpdate(id: $id, billingAddress: $billingAddress) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
    }
  }
}

mutation checkoutShippingAddressUpdate(
  $id: ID!
  $shippingAddress: AddressInput!
) {
  checkoutShippingAddressUpdate(id: $id, shippingAddress: $shippingAddress) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
    }
  }
}

mutation checkoutShippingMethodUpdate($id: ID!, $shippingMethodId: ID!) {
  checkoutShippingMethodUpdate(id: $id, shippingMethodId: $shippingMethodId) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
    }
  }
}

mutation checkoutPaymentCreate($checkoutId: ID!, $paymentInput: PaymentInput!) {
  checkoutPaymentCreate(checkoutId: $checkoutId, input: $paymentInput) {
    payment {
      id
      chargeStatus
      gateway
      token
      paymentMethodType
    }
    errors {
      field
      message
    }
  }
}

mutation checkoutComplete($checkoutId: ID!) {
  checkoutComplete(checkoutId: $checkoutId) {
    order {
      id
      userEmail
      created
    }
    confirmationNeeded
    confirmationData
    errors {
      field
      message
      code
    }
  }
}


mutation checkoutEmailUpdate($id: ID!, $email: String!) {
  checkoutEmailUpdate(id: $id, email: $email) {
    checkout {
      ...CheckoutFragment
    }
    errors {
      field
      code
      message
    }
  }
}
